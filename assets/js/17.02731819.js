(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{298:function(t,a,s){"use strict";s.r(a);var n=s(4),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"how-to-write-cwl-in-r"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-to-write-cwl-in-r"}},[t._v("#")]),t._v(" How to write CWL in R?")]),t._v(" "),s("p",[t._v("Here is an example to wrap "),s("code",[t._v("echo")]),t._v(" in Common Workflow Language (CWL) using the "),s("a",{attrs:{href:"https://bioconductor.org/packages/release/bioc/html/Rcwl.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Rcwl")]),s("OutboundLink")],1),t._v(" package.")]),t._v(" "),s("div",{staticClass:"language-r extra-class"},[s("pre",{pre:!0,attrs:{class:"language-r"}},[s("code",[t._v("library"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Rcwl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ninput1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" InputParam"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sth"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\necho "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" cwlParam"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("baseCommand "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inputs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" InputParamList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\necho"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("sth "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\necho\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("## class: cwlParam \n##  cwlClass: CommandLineTool \n##  cwlVersion: v1.0 \n##  baseCommand: echo \n## inputs:\n##   sth (string):  Hello World!\n## outputs:\n## output:\n##   type: stdout\n")])])]),s("p",[t._v("To write echo to CWL and YML.")]),t._v(" "),s("div",{staticClass:"language-r extra-class"},[s("pre",{pre:!0,attrs:{class:"language-r"}},[s("code",[t._v("out "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" tempfile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwriteCWL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("echo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("readLines"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("paste0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".cwl"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("## cwlVersion: v1.0\n## class: CommandLineTool\n## baseCommand: echo\n## inputs:\n##   sth:\n##     type: string\n##     inputBinding:\n##       separate: true\n## outputs:\n##   output:\n##     type: stdout\n")])])]),s("div",{staticClass:"language-r extra-class"},[s("pre",{pre:!0,attrs:{class:"language-r"}},[s("code",[t._v("cat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("readLines"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("paste0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".yml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("## sth: Hello World!\n")])])]),s("p",[t._v("Run CWL directly in R.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("runCWL(echo)\n")])])]),s("p",[t._v("More tutorial: "),s("a",{attrs:{href:"https://hubentu.github.io/Rcwl",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://hubentu.github.io/Rcwl"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);